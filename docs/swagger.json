{
    "swagger": "2.0",
    "info": {
        "description": "API for Hero Ticket DApp",
        "title": "Hero Ticket API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "api.heroticket.xyz",
    "paths": {
        "/favicon.ico": {
            "get": {
                "description": "returns favicon",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Get favicon",
                "responses": {
                    "200": {
                        "description": "favicon.ico",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "returns status",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Get status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/claims/{contractAddress}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "returns claim qr",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "claims"
                ],
                "summary": "returns claim qr",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "requests claim",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "claims"
                ],
                "summary": "requests claim",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/notices": {
            "get": {
                "description": "returns notices paginated",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notices"
                ],
                "summary": "Get notices",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/notice.Notices"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/notices/{id}": {
            "get": {
                "description": "returns notice by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notices"
                ],
                "summary": "Get notice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "notice id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/notice.Notice"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/profile/{name}": {
            "get": {
                "description": "returns user profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "returns user profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/tickets": {
            "get": {
                "description": "returns tickets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "returns tickets",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page size",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/tickets/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "creates ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "creates ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ticket name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ticket symbol",
                        "name": "symbol",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ticket description",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ticket organizer",
                        "name": "organizer",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ticket location",
                        "name": "location",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ticket date",
                        "name": "date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "ticket banner image",
                        "name": "bannerImage",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "ticket image",
                        "name": "ticketImage",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ticket price",
                        "name": "price",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ticket total supply",
                        "name": "totalSupply",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/tickets/purchase-callback": {
            "post": {
                "description": "purchase callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "purchase callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "account address",
                        "name": "accountAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "session id",
                        "name": "sessionId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "token",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/tickets/verify-callback": {
            "post": {
                "description": "verify callback",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "verify callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session id",
                        "name": "sessionId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "token",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/tickets/{contractAddress}": {
            "get": {
                "description": "returns ticket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "returns ticket",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/tickets/{contractAddress}/purchase-qr": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "returns purchase authorization qr code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "returns purchase authorization qr code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "session id",
                        "name": "sessionId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/protocol.AuthorizationRequestMessage"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/tickets/{contractAddress}/verify-qr": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "returns verify authorization qr code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "returns verify authorization qr code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "contract address",
                        "name": "contractAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "session id",
                        "name": "sessionId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/protocol.AuthorizationRequestMessage"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "returns user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "returns user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_heroticket_internal_service_user.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/login-callback": {
            "post": {
                "description": "processes login callback",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "processes login callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session id",
                        "name": "sessionId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "token",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/login-qr": {
            "get": {
                "description": "returns login qr code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "returns login qr code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session id",
                        "name": "sessionId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/protocol.AuthorizationRequestMessage"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/refresh": {
            "post": {
                "description": "refreshes token pair",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "refreshes token pair",
                "parameters": [
                    {
                        "description": "refresh token",
                        "name": "refreshToken",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/jwt.TokenPair"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/v1/users/register/{accountAddress}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "registers user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "registers user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "account address",
                        "name": "accountAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/rest.CommonResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/github_com_heroticket_internal_service_user.User"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/rest.CommonResponse"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "description": "returns websocket connection",
                "tags": [
                    "websocket"
                ],
                "summary": "Serve websocket",
                "responses": {}
            }
        }
    },
    "definitions": {
        "github_com_heroticket_internal_service_user.User": {
            "type": "object",
            "properties": {
                "accountAddress": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "banner": {
                    "type": "string"
                },
                "bio": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tbaAddress": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "jwt.TokenPair": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "accessTokenExpiry": {
                    "$ref": "#/definitions/time.Duration"
                },
                "refreshToken": {
                    "type": "string"
                },
                "refreshTokenExpiry": {
                    "$ref": "#/definitions/time.Duration"
                }
            }
        },
        "notice.Notice": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "notice.Notices": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/notice.Notice"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/notice.Pagination"
                }
            }
        },
        "notice.Pagination": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer"
                },
                "end": {
                    "type": "integer"
                },
                "hasNext": {
                    "type": "boolean"
                },
                "hasPrev": {
                    "type": "boolean"
                },
                "limit": {
                    "type": "integer"
                },
                "pages": {
                    "type": "integer"
                },
                "start": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "protocol.AuthorizationRequestMessage": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/protocol.AuthorizationRequestMessageBody"
                },
                "from": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "thid": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "typ": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "protocol.AuthorizationRequestMessageBody": {
            "type": "object",
            "properties": {
                "callbackUrl": {
                    "type": "string"
                },
                "did_doc": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "scope": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/protocol.ZeroKnowledgeProofRequest"
                    }
                }
            }
        },
        "protocol.ZeroKnowledgeProofRequest": {
            "type": "object",
            "properties": {
                "circuitId": {
                    "type": "string"
                },
                "id": {
                    "description": "unique request id",
                    "type": "integer"
                },
                "optional": {
                    "type": "boolean"
                },
                "query": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "rest.CommonResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000,
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour",
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}